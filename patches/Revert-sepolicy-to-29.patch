From b3e149f14a6f6f534432ca5038662d1e85ed13bc Mon Sep 17 00:00:00 2001
From: SeriniTY320 <SeriniTY320@gmail.com>
Date: Fri, 22 Sep 2017 00:59:32 +0300
Subject: [PATCH] Revert Orero sepolicy to 29

---
 private/app.te             |  5 +++--
 private/app_neverallows.te | 24 +++++++++++++-----------
 private/priv_app.te        |  3 ++-
 public/domain.te           |  9 ++++++---
 public/hal_drm.te          |  8 +++++---
 public/mediadrmserver.te   |  3 ++-
 public/mediaserver.te      |  8 +++++---
 public/shell.te            |  3 ++-
 8 files changed, 38 insertions(+), 25 deletions(-)

diff --git a/private/app.te b/private/app.te
index b5aef1c..05cc8dc 100644
--- a/private/app.te
+++ b/private/app.te
@@ -271,9 +271,10 @@ use_keystore({ appdomain -isolated_app -ephemeral_app })
 
 allow appdomain console_device:chr_file { read write };
 
+#Revert to 29
 # only allow unprivileged socket ioctl commands
-allowxperm { appdomain -bluetooth } self:{ rawip_socket tcp_socket udp_socket }
-  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
+#allowxperm { appdomain -bluetooth } self:{ rawip_socket tcp_socket udp_socket }
+#  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
 
 allow { appdomain -isolated_app } ion_device:chr_file rw_file_perms;
 # TODO is write really necessary ?
diff --git a/private/app_neverallows.te b/private/app_neverallows.te
index a8a6f68..f80da8a 100644
--- a/private/app_neverallows.te
+++ b/private/app_neverallows.te
@@ -54,17 +54,19 @@ neverallow all_untrusted_apps sysfs_mac_address:file no_rw_file_perms;
 
 # Restrict socket ioctls. Either 1. disallow privileged ioctls, 2. disallow the
 # ioctl permission, or 3. disallow the socket class.
-neverallowxperm all_untrusted_apps domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
-neverallow all_untrusted_apps *:{ netlink_route_socket netlink_selinux_socket } ioctl;
-neverallow all_untrusted_apps *:{
-  socket netlink_socket packet_socket key_socket appletalk_socket
-  netlink_tcpdiag_socket netlink_nflog_socket
-  netlink_xfrm_socket netlink_audit_socket
-  netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket
-  netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket
-  netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket
-  netlink_rdma_socket netlink_crypto_socket
-} *;
+
+#Revert to 29
+#neverallowxperm all_untrusted_apps domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
+#neverallow all_untrusted_apps *:{ netlink_route_socket netlink_selinux_socket } ioctl;
+#neverallow all_untrusted_apps *:{
+#  socket netlink_socket packet_socket key_socket appletalk_socket
+#  netlink_tcpdiag_socket netlink_nflog_socket
+#  netlink_xfrm_socket netlink_audit_socket
+#  netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket
+#  netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket
+#  netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket
+#  netlink_rdma_socket netlink_crypto_socket
+#} *;
 
 # Do not allow untrusted apps access to /cache
 neverallow all_untrusted_apps { cache_file cache_recovery_file }:dir ~{ r_dir_perms };
diff --git a/private/priv_app.te b/private/priv_app.te
index 065ea1a..c176b39 100644
--- a/private/priv_app.te
+++ b/private/priv_app.te
@@ -85,8 +85,9 @@ r_dir_file(priv_app, rootfs)
 # Allow GMS core to open kernel config for OTA matching through libvintf
 allow priv_app config_gz:file { open read getattr };
 
+#Revert to 29
 # access the mac address
-allowxperm priv_app self:udp_socket ioctl SIOCGIFHWADDR;
+#allowxperm priv_app self:udp_socket ioctl SIOCGIFHWADDR;
 
 # Allow GMS core to communicate with update_engine for A/B update.
 binder_call(priv_app, update_engine)
diff --git a/public/domain.te b/public/domain.te
index 19b784b..1400e17 100644
--- a/public/domain.te
+++ b/public/domain.te
@@ -200,10 +200,13 @@ allow domain fs_type:dir getattr;
 # defaults for all processes. Note that granting this whitelist to domain does
 # not grant the ioctl permission on these socket types. That must be granted
 # separately.
-allowxperm domain domain:{ rawip_socket tcp_socket udp_socket }
-  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
+
+#Revert to 29
+#allowxperm domain domain:{ rawip_socket tcp_socket udp_socket }
+#  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
+#Revert to 29
 # default whitelist for unix sockets.
-allowxperm domain domain:{ unix_dgram_socket unix_stream_socket }
+#allowxperm domain domain:{ unix_dgram_socket unix_stream_socket }
   ioctl unpriv_unix_sock_ioctls;
 
 # Restrict PTYs to only whitelisted ioctls.
diff --git a/public/hal_drm.te b/public/hal_drm.te
index 5a6bf5c..c40b2a5 100644
--- a/public/hal_drm.te
+++ b/public/hal_drm.te
@@ -44,9 +44,10 @@ allow hal_drm sysfs:file r_file_perms;
 
 allow hal_drm tee_device:chr_file rw_file_perms;
 
+#Revert to 29
 # only allow unprivileged socket ioctl commands
-allowxperm hal_drm self:{ rawip_socket tcp_socket udp_socket }
-  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
+#allowxperm hal_drm self:{ rawip_socket tcp_socket udp_socket }
+#  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
 
 ###
 ### neverallow rules
@@ -56,5 +57,6 @@ allowxperm hal_drm self:{ rawip_socket tcp_socket udp_socket }
 # domain transition
 neverallow hal_drm { file_type fs_type }:file execute_no_trans;
 
+#Revert to 29
 # do not allow privileged socket ioctl commands
-neverallowxperm hal_drm domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
+#neverallowxperm hal_drm domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
diff --git a/public/mediadrmserver.te b/public/mediadrmserver.te
index cef8121..ab12598 100644
--- a/public/mediadrmserver.te
+++ b/public/mediadrmserver.te
@@ -29,5 +29,6 @@ binder_call(mediadrmserver, mediacodec)
 # domain transition
 neverallow mediadrmserver { file_type fs_type }:file execute_no_trans;
 
+#Revert to 29
 # do not allow privileged socket ioctl commands
-neverallowxperm mediadrmserver domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
+#neverallowxperm mediadrmserver domain:{ rawip_socket tcp_socket udp_socket } ioctl #priv_sock_ioctls;
diff --git a/public/mediaserver.te b/public/mediaserver.te
index 6efaf0f..c75c30d 100644
--- a/public/mediaserver.te
+++ b/public/mediaserver.te
@@ -114,9 +114,10 @@ allow mediaserver drmserver:drmservice {
     pread
 };
 
+#Revert to 29
 # only allow unprivileged socket ioctl commands
-allowxperm mediaserver self:{ rawip_socket tcp_socket udp_socket }
-  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
+#allowxperm mediaserver self:{ rawip_socket tcp_socket udp_socket }
+#  ioctl { unpriv_sock_ioctls unpriv_tty_ioctls };
 
 # Access to /data/media.
 # This should be removed if sdcardfs is modified to alter the secontext for its
@@ -146,5 +147,6 @@ binder_call(mediaserver, mediacodec)
 # domain transition
 neverallow mediaserver { file_type fs_type }:file execute_no_trans;
 
+#Revert to 29
 # do not allow privileged socket ioctl commands
-neverallowxperm mediaserver domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
+#neverallowxperm mediaserver domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
diff --git a/public/shell.te b/public/shell.te
index 1fb896a..1ccb75d 100644
--- a/public/shell.te
+++ b/public/shell.te
@@ -168,8 +168,9 @@ allow shell sepolicy_file:file r_file_perms;
 # capability.
 neverallow shell file_type:file link;
 
+#Revert to 29
 # Do not allow privileged socket ioctl commands
-neverallowxperm shell domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
+#neverallowxperm shell domain:{ rawip_socket tcp_socket udp_socket } ioctl priv_sock_ioctls;
 
 # limit shell access to sensitive char drivers to
 # only getattr required for host side test.
-- 
2.7.4

